[{"/Users/careycosta/dev/darkreads/client/src/index.tsx":"1","/Users/careycosta/dev/darkreads/client/src/reportWebVitals.ts":"2","/Users/careycosta/dev/darkreads/client/src/App.tsx":"3","/Users/careycosta/dev/darkreads/client/src/components/SearchHeader/SearchHeader.tsx":"4","/Users/careycosta/dev/darkreads/client/src/components/Books/Books.tsx":"5","/Users/careycosta/dev/darkreads/client/src/components/repository.ts":"6","/Users/careycosta/dev/darkreads/client/src/components/BookModal/BookModal.tsx":"7","/Users/careycosta/dev/darkreads/client/src/BuildingBlocks/Modal/Modal.tsx":"8","/Users/careycosta/dev/darkreads/client/src/BuildingBlocks/MultiSelect.tsx":"9"},{"size":554,"mtime":1688307078564,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1688307078564,"results":"12","hashOfConfig":"11"},{"size":539,"mtime":1688501921331,"results":"13","hashOfConfig":"11"},{"size":3086,"mtime":1688498604287,"results":"14","hashOfConfig":"11"},{"size":1552,"mtime":1688495769502,"results":"15","hashOfConfig":"11"},{"size":2958,"mtime":1688573207709,"results":"16","hashOfConfig":"11"},{"size":1669,"mtime":1688573936751,"results":"17","hashOfConfig":"11"},{"size":439,"mtime":1688493353086,"results":"18","hashOfConfig":"11"},{"size":5851,"mtime":1688574762033,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1kt9fgf",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/careycosta/dev/darkreads/client/src/index.tsx",[],[],[],"/Users/careycosta/dev/darkreads/client/src/reportWebVitals.ts",[],[],"/Users/careycosta/dev/darkreads/client/src/App.tsx",["51"],[],"import { useState, useEffect } from \"react\";\nimport { Books } from \"./components/Books/Books\";\nimport { SearchHeader } from \"./components/SearchHeader/SearchHeader\";\nimport { BookProps } from \"./components/types\";\n\nimport styles from \"./App.module.scss\";\n\nconst { container } = styles;\n\nfunction App() {\n  const [books, setBooks] = useState<BookProps[]>([]);\n\n  return (\n    <div className={container}>\n      <SearchHeader handleSetBooks={setBooks} books={books} />\n      <Books booksList={books} />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/careycosta/dev/darkreads/client/src/components/SearchHeader/SearchHeader.tsx",["52","53"],[],"import { useEffect, useState } from \"react\";\nimport { sortBy } from \"lodash\";\nimport {\n  BookProps,\n  SearchStateProps,\n  SortConfigProps,\n  SearchHeaderProps,\n} from \"../types\";\nimport { getBooks } from \"../repository\";\n\nimport styles from \"./SearchHeader.module.scss\";\nconst { headerContainer, inputWrapper, searchButton } = styles;\n\nconst localStorageState = localStorage.getItem(\"searchState\");\nconst initialState = localStorageState ? JSON.parse(localStorageState) : null;\n\nconst sortBooks = (booksList: BookProps[], direction: string): BookProps[] => {\n  if (direction === \"ASC\") {\n    return sortBy(booksList, (item: BookProps) => item.publishedDate);\n  } else {\n    return sortBy(booksList, (item: BookProps) => item.publishedDate).reverse();\n  }\n};\n\nexport const SearchHeader = (props: SearchHeaderProps) => {\n  const { handleSetBooks, books } = props;\n\n  const [searchState, setSearchState] =\n    useState<SearchStateProps>(initialState);\n  const [sortConfig, setSortConfig] = useState<SortConfigProps>({\n    direction: \"ASC\",\n  });\n\n  // get books initially\n  useEffect(() => {\n    if (!searchState) {\n      return;\n    }\n    getBooks(searchState.title, searchState.author).then((response) =>\n      handleSetBooks(response)\n    );\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"searchState\", JSON.stringify(searchState));\n  }, [searchState]);\n\n  // when the sortDirection changes, update the book state\n  useEffect(() => {\n    handleSetBooks(sortBooks(books, sortConfig.direction));\n  }, [sortConfig.direction]);\n\n  const toggleSortDirection = () => {\n    if (sortConfig.direction === \"ASC\") {\n      setSortConfig((state) => ({ ...state, direction: \"DESC\" }));\n    } else {\n      setSortConfig((state) => ({ ...state, direction: \"ASC\" }));\n    }\n  };\n\n  // fetch books with current state parameters\n  const handleGetBooks = async () => {\n    const response = await getBooks(searchState.title, searchState.author);\n    handleSetBooks(sortBooks(response, sortConfig.direction));\n  };\n\n  return (\n    <>\n      <div className={headerContainer}>\n        <h1>darkreads ðŸ•·</h1>\n        <div>\n          <div className={inputWrapper}>\n            <input\n              type=\"text\"\n              placeholder=\"book title\"\n              onChange={(e) =>\n                setSearchState((state) => ({ ...state, title: e.target.value }))\n              }\n              value={searchState?.title}\n            />\n            <input\n              type=\"text\"\n              placeholder=\"author\"\n              onChange={(e) =>\n                setSearchState((state) => ({\n                  ...state,\n                  author: e.target.value,\n                }))\n              }\n              value={searchState?.author}\n            />\n            <button className={searchButton} onClick={handleGetBooks}>\n              <span>ðŸ’€</span>\n            </button>\n            {!!books.length && (\n              <button onClick={toggleSortDirection}>\n                {sortConfig.direction}\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","/Users/careycosta/dev/darkreads/client/src/components/Books/Books.tsx",["54"],[],"import { useState } from \"react\";\nimport { BookProps } from \"../types\";\nimport { BookModal } from \"../BookModal/BookModal\";\nimport styles from \"./Books.module.scss\";\n\nconst {\n  booksContainer,\n  bookItem,\n  bookInfoWrapper,\n  bookTitle,\n  bookDescription,\n  imageContainer,\n} = styles;\n\nconst getSanitizedDate = (date: Date) => {\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1;\n  const day = date.getDate();\n\n  return [day, month, year].join(\"/\");\n};\n\nexport const Books = (props: { booksList: BookProps[] }) => {\n  const [showBookModal, setShowBookModal] = useState<string | null>(null);\n  const { booksList } = props;\n  return (\n    <div className={booksContainer}>\n      {showBookModal && (\n        <BookModal\n          handleShowModal={setShowBookModal}\n          book={booksList.find((b) => b.id === showBookModal)}\n        />\n      )}\n      {booksList.length ? (\n        booksList.map((b) => (\n          <div className={bookItem} key={`book-${b.id}`}>\n            <div className={bookInfoWrapper}>\n              <div className={bookTitle}>{b.title}</div>\n              <div>{b.authors}</div>\n              <div>{getSanitizedDate(b.publishedDate)}</div>\n              <div className={bookDescription}>{b.description}</div>\n              <button onClick={() => setShowBookModal(b.id)}>show modal</button>\n            </div>\n            <div className={imageContainer}>\n              <img src={b.imageLink} />\n            </div>\n          </div>\n        ))\n      ) : (\n        <div>no books</div>\n      )}\n    </div>\n  );\n};\n","/Users/careycosta/dev/darkreads/client/src/components/repository.ts",[],[],"/Users/careycosta/dev/darkreads/client/src/components/BookModal/BookModal.tsx",["55","56","57","58"],[],"/Users/careycosta/dev/darkreads/client/src/BuildingBlocks/Modal/Modal.tsx",[],[],"/Users/careycosta/dev/darkreads/client/src/BuildingBlocks/MultiSelect.tsx",["59","60"],[],{"ruleId":"61","severity":1,"message":"62","line":1,"column":20,"nodeType":"63","messageId":"64","endLine":1,"endColumn":29},{"ruleId":"65","severity":1,"message":"66","line":42,"column":6,"nodeType":"67","endLine":42,"endColumn":8,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"69","line":51,"column":6,"nodeType":"67","endLine":51,"endColumn":28,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":45,"column":15,"nodeType":"73","endLine":45,"endColumn":40},{"ruleId":"61","severity":1,"message":"74","line":18,"column":7,"nodeType":"63","messageId":"64","endLine":18,"endColumn":20},{"ruleId":"61","severity":1,"message":"75","line":35,"column":10,"nodeType":"63","messageId":"64","endLine":35,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":56,"column":11,"nodeType":"73","endLine":56,"endColumn":40},{"ruleId":"76","severity":1,"message":"77","line":57,"column":11,"nodeType":"73","messageId":"78","endLine":57,"endColumn":55,"fix":"79"},{"ruleId":"61","severity":1,"message":"80","line":1,"column":45,"nodeType":"63","messageId":"64","endLine":1,"endColumn":54},{"ruleId":"81","severity":1,"message":"82","line":45,"column":11,"nodeType":"83","messageId":"84","endLine":49,"endColumn":19},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleSetBooks' and 'searchState'. Either include them or remove the dependency array.","ArrayExpression",["85"],"React Hook useEffect has missing dependencies: 'books' and 'handleSetBooks'. Either include them or remove the dependency array.",["86"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'handleAddToDB' is assigned a value but never used.","'categories' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"87","text":"88"},"'useSelect' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},[1570,1570]," rel=\"noreferrer\"","Update the dependencies array to be: [handleSetBooks, searchState]",{"range":"93","text":"94"},"Update the dependencies array to be: [books, handleSetBooks, sortConfig.direction]",{"range":"95","text":"96"},[1247,1249],"[handleSetBooks, searchState]",[1509,1531],"[books, handleSetBooks, sortConfig.direction]"]