{"ast":null,"code":"import axios from \"axios\";\n// local requests\n\nconst sanitizedCategories = categories => categories.map(c => c.id ? c : {\n  name: c.name\n});\nexport const createBookEntry = async _ref => {\n  let {\n    googleId,\n    // ISBN10,\n    // ISBN13,\n    categories\n  } = _ref;\n  const localInstance = axios.create({\n    baseURL: \"http://localhost:5000\"\n  });\n  const response = await localInstance.post(`/api/book/`, {\n    googleId,\n    // ISBN10,\n    // ISBN13,\n    categories: sanitizedCategories(categories)\n  });\n  return response.data;\n};\nexport const createCategoryEntry = async _ref2 => {\n  let {\n    categoryName\n  } = _ref2;\n  const localInstance = axios.create({\n    baseURL: \"http://localhost:5000\"\n  });\n  console.log(categoryName);\n  return await localInstance.post(`/api/category/`, {\n    name: categoryName\n  });\n};\nexport const createBulkCategoryEntries = async _ref3 => {\n  let {\n    categories\n  } = _ref3;\n  const localInstance = axios.create({\n    baseURL: \"http://localhost:5000\"\n  });\n  const response = await localInstance.post(`/api/category/bulk/`, {\n    categories: categories.map(c => ({\n      name: c\n    }))\n  });\n  return response.data;\n};\nexport const getAllCategories = async () => {\n  const localInstance = axios.create({\n    baseURL: \"http://localhost:5000\"\n  });\n  const response = await localInstance.get(`/api/category`);\n  return response.data;\n};\nexport const addCategoriesToBook = async (bookId, categories) => {\n  const localInstance = axios.create({\n    baseURL: \"http://localhost:5000\"\n  });\n  return await localInstance.post(`/api/book/addCategories`, {\n    categories,\n    bookId\n  });\n};\nexport const getLocalBooks = async () => {\n  const localInstance = axios.create({\n    baseURL: \"http://localhost:5000\"\n  });\n  const response = await localInstance.get(`/api/books/`);\n  return response;\n};\nexport const getLocalBook = async bookId => {\n  const localInstance = axios.create({\n    baseURL: \"http://localhost:5000\"\n  });\n  const response = await localInstance.get(`/api/book/googleId/${bookId}`);\n  return response;\n};\n\n// google api requests\n\nconst googleURL = \"https://www.googleapis.com/books/v1/\";\nconst apiKey = \"AIzaSyBbgOtmMrBOZ6ie66zJXV2h_IG8UcUX_VI\";\nconst sanitizedSearchTerm = searchTerm => searchTerm.replace(/ /g, \"+\");\nconst sanitizedBookResponse = _ref4 => {\n  var _searchTerms$title, _searchTerms$author;\n  let {\n    item,\n    searchTerms\n  } = _ref4;\n  const {\n    title,\n    authors,\n    description,\n    categories,\n    publishedDate,\n    previewLink,\n    imageLinks,\n    industryIdentifiers\n  } = item.volumeInfo;\n  const {\n    id\n  } = item;\n  const getISBNs = identifiers => {\n    var _identifiers$find, _identifiers$find2;\n    return {\n      ISBN10: identifiers === null || identifiers === void 0 ? void 0 : (_identifiers$find = identifiers.find(i => i.type === \"ISBN_10\")) === null || _identifiers$find === void 0 ? void 0 : _identifiers$find.identifier,\n      ISBN13: identifiers === null || identifiers === void 0 ? void 0 : (_identifiers$find2 = identifiers.find(i => i.type === \"ISBN_13\")) === null || _identifiers$find2 === void 0 ? void 0 : _identifiers$find2.identifier\n    };\n  };\n  const ISBNs = industryIdentifiers.find(i => i.type === \"ISBN_10\" || i.type === \"ISBN_13\");\n  const lowerCaseGoogleTitle = title.toLowerCase();\n  const lowerCaseGoogleAuthors = authors.map(t => t.toLowerCase());\n  if (lowerCaseGoogleTitle.includes((_searchTerms$title = searchTerms.title) === null || _searchTerms$title === void 0 ? void 0 : _searchTerms$title.toLowerCase()) || lowerCaseGoogleAuthors.includes((_searchTerms$author = searchTerms.author) === null || _searchTerms$author === void 0 ? void 0 : _searchTerms$author.toLocaleLowerCase())) {\n    return {\n      id,\n      title,\n      authors,\n      description,\n      categories,\n      publishedDate: new Date(publishedDate),\n      previewLink,\n      imageLink: imageLinks === null || imageLinks === void 0 ? void 0 : imageLinks.thumbnail,\n      ISBNs: getISBNs(industryIdentifiers)\n    };\n  }\n};\nexport const getBooks = async searchTerms => {\n  const {\n    title = \"\",\n    author\n  } = searchTerms;\n  try {\n    var _data$items;\n    const {\n      data\n    } = await axios.get(`${googleURL}volumes?q=${sanitizedSearchTerm(title)}${author && `+inauthor:${author}`}&maxResults=40&key=${apiKey}`);\n    const bookList = ((_data$items = data.items) === null || _data$items === void 0 ? void 0 : _data$items.map(i => sanitizedBookResponse({\n      item: i,\n      searchTerms\n    })).filter(i => !!i)) || [];\n    console.log(bookList);\n    return bookList;\n  } catch (e) {\n    console.log(e);\n  }\n};","map":{"version":3,"names":["axios","sanitizedCategories","categories","map","c","id","name","createBookEntry","_ref","googleId","localInstance","create","baseURL","response","post","data","createCategoryEntry","_ref2","categoryName","console","log","createBulkCategoryEntries","_ref3","getAllCategories","get","addCategoriesToBook","bookId","getLocalBooks","getLocalBook","googleURL","apiKey","sanitizedSearchTerm","searchTerm","replace","sanitizedBookResponse","_ref4","_searchTerms$title","_searchTerms$author","item","searchTerms","title","authors","description","publishedDate","previewLink","imageLinks","industryIdentifiers","volumeInfo","getISBNs","identifiers","_identifiers$find","_identifiers$find2","ISBN10","find","i","type","identifier","ISBN13","ISBNs","lowerCaseGoogleTitle","toLowerCase","lowerCaseGoogleAuthors","t","includes","author","toLocaleLowerCase","Date","imageLink","thumbnail","getBooks","_data$items","bookList","items","filter","e"],"sources":["/Users/careycosta/dev/darkreads/client/src/components/repository.ts"],"sourcesContent":["import axios, { AxiosResponse } from \"axios\";\nimport { BookProps, CategoryProps, SearchStateProps } from \"./types\";\n\n// local requests\n\nconst sanitizedCategories = (categories: CategoryProps[]) =>\n  categories.map((c: CategoryProps) => (c.id ? c : { name: c.name }));\n\nexport const createBookEntry = async ({\n  googleId,\n  // ISBN10,\n  // ISBN13,\n  categories,\n}: {\n  googleId: string;\n  categories: CategoryProps[];\n}) => {\n  const localInstance = axios.create({\n    baseURL: \"http://localhost:5000\",\n  });\n\n  const response = await localInstance.post(`/api/book/`, {\n    googleId,\n    // ISBN10,\n    // ISBN13,\n    categories: sanitizedCategories(categories),\n  });\n\n  return response.data;\n};\n\nexport const createCategoryEntry = async ({\n  categoryName,\n}: {\n  categoryName: string;\n}) => {\n  const localInstance = axios.create({\n    baseURL: \"http://localhost:5000\",\n  });\n\n  console.log(categoryName);\n  return await localInstance.post(`/api/category/`, {\n    name: categoryName,\n  });\n};\n\nexport const createBulkCategoryEntries = async ({\n  categories,\n}: {\n  categories: string[];\n}) => {\n  const localInstance = axios.create({\n    baseURL: \"http://localhost:5000\",\n  });\n\n  const response = await localInstance.post(`/api/category/bulk/`, {\n    categories: categories.map((c) => ({ name: c })),\n  });\n\n  return response.data;\n};\n\nexport const getAllCategories = async () => {\n  const localInstance = axios.create({\n    baseURL: \"http://localhost:5000\",\n  });\n\n  const response = await localInstance.get(`/api/category`);\n  return response.data;\n};\n\nexport const addCategoriesToBook = async (\n  bookId: string,\n  categories: AxiosResponse<any, any>\n) => {\n  const localInstance = axios.create({\n    baseURL: \"http://localhost:5000\",\n  });\n\n  return await localInstance.post(`/api/book/addCategories`, {\n    categories,\n    bookId,\n  });\n};\n\nexport const getLocalBooks = async () => {\n  const localInstance = axios.create({\n    baseURL: \"http://localhost:5000\",\n  });\n\n  const response = await localInstance.get(`/api/books/`);\n\n  return response;\n};\n\nexport const getLocalBook = async (bookId: string) => {\n  const localInstance = axios.create({\n    baseURL: \"http://localhost:5000\",\n  });\n\n  const response = await localInstance.get(`/api/book/googleId/${bookId}`);\n\n  return response;\n};\n\n// google api requests\n\nconst googleURL = \"https://www.googleapis.com/books/v1/\";\nconst apiKey = \"AIzaSyBbgOtmMrBOZ6ie66zJXV2h_IG8UcUX_VI\";\n\nconst sanitizedSearchTerm = (searchTerm: string): string =>\n  searchTerm.replace(/ /g, \"+\");\n\nconst sanitizedBookResponse = ({\n  item,\n  searchTerms,\n}: {\n  item: any;\n  searchTerms: { title?: string; author?: string };\n}) => {\n  const {\n    title,\n    authors,\n    description,\n    categories,\n    publishedDate,\n    previewLink,\n    imageLinks,\n    industryIdentifiers,\n  } = item.volumeInfo;\n\n  const { id } = item;\n\n  const getISBNs = (\n    identifiers: { type: string | undefined; identifier: string | undefined }[]\n  ) => {\n    return {\n      ISBN10: identifiers?.find((i) => i.type === \"ISBN_10\")?.identifier,\n      ISBN13: identifiers?.find((i) => i.type === \"ISBN_13\")?.identifier,\n    };\n  };\n\n  const ISBNs = industryIdentifiers.find(\n    (i) => i.type === \"ISBN_10\" || i.type === \"ISBN_13\"\n  );\n\n  const lowerCaseGoogleTitle = title.toLowerCase();\n  const lowerCaseGoogleAuthors = authors.map((t: string) => t.toLowerCase());\n\n  if (\n    lowerCaseGoogleTitle.includes(searchTerms.title?.toLowerCase()) ||\n    lowerCaseGoogleAuthors.includes(searchTerms.author?.toLocaleLowerCase())\n  ) {\n    return {\n      id,\n      title,\n      authors,\n      description,\n      categories,\n      publishedDate: new Date(publishedDate),\n      previewLink,\n      imageLink: imageLinks?.thumbnail,\n      ISBNs: getISBNs(industryIdentifiers),\n    };\n  }\n};\n\nexport const getBooks = async (searchTerms: SearchStateProps) => {\n  const { title = \"\", author } = searchTerms;\n  try {\n    const { data } = await axios.get(\n      `${googleURL}volumes?q=${sanitizedSearchTerm(title)}${\n        author && `+inauthor:${author}`\n      }&maxResults=40&key=${apiKey}`\n    );\n    const bookList =\n      data.items\n        ?.map((i: any) => sanitizedBookResponse({ item: i, searchTerms }))\n        .filter((i: any) => !!i) || [];\n\n    console.log(bookList);\n    return bookList;\n  } catch (e) {\n    console.log(e);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}