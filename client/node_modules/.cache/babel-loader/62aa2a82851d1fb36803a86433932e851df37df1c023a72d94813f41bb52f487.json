{"ast":null,"code":"var _jsxFileName = \"/Users/careycosta/dev/darkreads/client/src/components/BookModal/BookActionsForm.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { MultiSelect } from \"../../BuildingBlocks/MultiSelect/MultiSelect\";\nimport { getAllCategories } from \"../../components/repository\";\n\n// type CategoryOption = { [key: string]: string };\n\n// type CategoryPickerProps = {\n//   onChange: (newValues: CategoryOption[]) => void;\n//   name: string;\n//   values: CategoryOption[];\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookActionsForm = _ref => {\n  _s();\n  var _book, _localBook;\n  let {\n    onChange,\n    name,\n    values\n  } = _ref;\n  const [options, setCategoryOptions] = useState([]);\n  useEffect(() => {\n    const getCategories = async () => {\n      const categoriesResponse = await getAllCategories();\n      setCategoryOptions(categoriesResponse);\n    };\n    getCategories();\n  }, []);\n  const initialValues = {\n    googleId: (_book = book) === null || _book === void 0 ? void 0 : _book.id,\n    categories: ((_localBook = localBook) === null || _localBook === void 0 ? void 0 : _localBook.categories) || []\n  };\n  const formik = useFormik({\n    initialValues,\n    onSubmit: values => handleAddToDB(values)\n  });\n  const handleCategorySelect = newValues => {\n    formik.setFieldValue(\"categories\", newValues);\n  };\n\n  //   const createBulkCategories = async ({ name }: { name: string }) => {\n  //     const response = await createBulkCategoryEntries({\n  //       categories: name,\n  //     });\n  //     setCategoryOptions((prev) => [...prev, response.data]);\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(MultiSelect, {\n      options: options,\n      setCategoryOptions: setCategoryOptions,\n      values: values,\n      name: name,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(BookActionsForm, \"umMFTRG0ckrOHzEe0Mi3c8u5zgM=\", false, function () {\n  return [useFormik];\n});\n_c = BookActionsForm;\nvar _c;\n$RefreshReg$(_c, \"BookActionsForm\");","map":{"version":3,"names":["useState","useEffect","useFormik","MultiSelect","getAllCategories","jsxDEV","_jsxDEV","BookActionsForm","_ref","_s","_book","_localBook","onChange","name","values","options","setCategoryOptions","getCategories","categoriesResponse","initialValues","googleId","book","id","categories","localBook","formik","onSubmit","handleAddToDB","handleCategorySelect","newValues","setFieldValue","handleSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/careycosta/dev/darkreads/client/src/components/BookModal/BookActionsForm.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useFormik, FormikProps } from \"formik\";\n\nimport { MultiSelect } from \"../../BuildingBlocks/MultiSelect/MultiSelect\";\nimport { getAllCategories } from \"../../components/repository\";\n\n// type CategoryOption = { [key: string]: string };\n\n// type CategoryPickerProps = {\n//   onChange: (newValues: CategoryOption[]) => void;\n//   name: string;\n//   values: CategoryOption[];\n// };\n\nexport const BookActionsForm = ({ onChange, name, values }) => {\n  const [options, setCategoryOptions] = useState([]);\n\n  useEffect(() => {\n    const getCategories = async () => {\n      const categoriesResponse = await getAllCategories();\n      setCategoryOptions(categoriesResponse);\n    };\n\n    getCategories();\n  }, []);\n\n  const initialValues: {\n    googleId: string | undefined;\n    categories: Record<string, string>[];\n  } = {\n    googleId: book?.id,\n    categories: localBook?.categories || [],\n  };\n  const formik = useFormik({\n    initialValues,\n    onSubmit: (values) => handleAddToDB(values),\n  });\n\n  const handleCategorySelect = (newValues) => {\n    formik.setFieldValue(\"categories\", newValues);\n  };\n\n  //   const createBulkCategories = async ({ name }: { name: string }) => {\n  //     const response = await createBulkCategoryEntries({\n  //       categories: name,\n  //     });\n  //     setCategoryOptions((prev) => [...prev, response.data]);\n  //   };\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <MultiSelect\n        options={options}\n        setCategoryOptions={setCategoryOptions}\n        values={values}\n        name={name}\n        onChange={onChange}\n      />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAqB,QAAQ;AAE/C,SAASC,WAAW,QAAQ,8CAA8C;AAC1E,SAASC,gBAAgB,QAAQ,6BAA6B;;AAE9D;;AAEA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,eAAe,GAAGC,IAAA,IAAgC;EAAAC,EAAA;EAAA,IAAAC,KAAA,EAAAC,UAAA;EAAA,IAA/B;IAAEC,QAAQ;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAAN,IAAA;EACxD,MAAM,CAACO,OAAO,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMgB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,kBAAkB,GAAG,MAAMd,gBAAgB,CAAC,CAAC;MACnDY,kBAAkB,CAACE,kBAAkB,CAAC;IACxC,CAAC;IAEDD,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,aAGL,GAAG;IACFC,QAAQ,GAAAV,KAAA,GAAEW,IAAI,cAAAX,KAAA,uBAAJA,KAAA,CAAMY,EAAE;IAClBC,UAAU,EAAE,EAAAZ,UAAA,GAAAa,SAAS,cAAAb,UAAA,uBAATA,UAAA,CAAWY,UAAU,KAAI;EACvC,CAAC;EACD,MAAME,MAAM,GAAGvB,SAAS,CAAC;IACvBiB,aAAa;IACbO,QAAQ,EAAGZ,MAAM,IAAKa,aAAa,CAACb,MAAM;EAC5C,CAAC,CAAC;EAEF,MAAMc,oBAAoB,GAAIC,SAAS,IAAK;IAC1CJ,MAAM,CAACK,aAAa,CAAC,YAAY,EAAED,SAAS,CAAC;EAC/C,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEvB,OAAA;IAAMoB,QAAQ,EAAED,MAAM,CAACM,YAAa;IAAAC,QAAA,gBAClC1B,OAAA,CAACH,WAAW;MACVY,OAAO,EAAEA,OAAQ;MACjBC,kBAAkB,EAAEA,kBAAmB;MACvCF,MAAM,EAAEA,MAAO;MACfD,IAAI,EAAEA,IAAK;MACXD,QAAQ,EAAEA;IAAS;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACF9B,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAC3B,EAAA,CA/CWF,eAAe;EAAA,QAmBXL,SAAS;AAAA;AAAAoC,EAAA,GAnBb/B,eAAe;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}