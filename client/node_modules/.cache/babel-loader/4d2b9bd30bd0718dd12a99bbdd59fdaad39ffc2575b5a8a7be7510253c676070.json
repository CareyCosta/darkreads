{"ast":null,"code":"var _jsxFileName = \"/Users/careycosta/dev/darkreads/client/src/components/BookModal/BookActionsForm.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { MultiSelect } from \"../../BuildingBlocks/MultiSelect/MultiSelect\";\nimport { getAllCategories } from \"../../components/repository\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// const handleAddToDB = async ({\n//   categories,\n// }: {\n//   categories: CategoryProps[];\n// }) => {\n//   const newBook = await createBookEntry({\n//     googleId: params.googleId,\n//     categories: params.categories,\n//   });\n\n//   return { newBook };\n// };\nexport const BookActionsForm = _ref => {\n  _s();\n  var _book;\n  let {\n    googleId\n  } = _ref;\n  const [allCategories, setAllCategoryOptions] = useState([]);\n  useEffect(() => {\n    const getCategories = async () => {\n      const categoriesResponse = await getAllCategories();\n      setAllCategoryOptions(categoriesResponse);\n    };\n    getCategories();\n  }, []);\n  const initialValues = {\n    bookCategories: ((_book = book) === null || _book === void 0 ? void 0 : _book.categories) || []\n  };\n  const formik = useFormik({\n    initialValues,\n    onSubmit: values => handleAddToDB(values)\n  });\n  const handleCategorySelect = newValues => {\n    formik.setFieldValue(\"categories\", newValues);\n  };\n\n  //   const createBulkCategories = async ({ name }: { name: string }) => {\n  //     const response = await createBulkCategoryEntries({\n  //       categories: name,\n  //     });\n  //     setAllCategoryOptions((prev) => [...prev, response.data]);\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(MultiSelect, {\n      options: allCategories,\n      setOptions: setAllCategoryOptions,\n      values: formik.values.bookCategories,\n      name: \"bookCategories\",\n      onChange: handleCategorySelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(BookActionsForm, \"b4cW5Ol8bcQbbxgwji3axy+gbyE=\", false, function () {\n  return [useFormik];\n});\n_c = BookActionsForm;\nvar _c;\n$RefreshReg$(_c, \"BookActionsForm\");","map":{"version":3,"names":["useState","useEffect","useFormik","MultiSelect","getAllCategories","jsxDEV","_jsxDEV","BookActionsForm","_ref","_s","_book","googleId","allCategories","setAllCategoryOptions","getCategories","categoriesResponse","initialValues","bookCategories","book","categories","formik","onSubmit","values","handleAddToDB","handleCategorySelect","newValues","setFieldValue","handleSubmit","children","options","setOptions","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/careycosta/dev/darkreads/client/src/components/BookModal/BookActionsForm.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useFormik, FormikProps } from \"formik\";\n\nimport { MultiSelect } from \"../../BuildingBlocks/MultiSelect/MultiSelect\";\nimport { LocalBookProps, CategoryProps } from \"../types\";\nimport { getAllCategories } from \"../../components/repository\";\n\ntype NewCategoryProps = Pick<CategoryProps, \"name\">;\n\n// const handleAddToDB = async ({\n//   categories,\n// }: {\n//   categories: CategoryProps[];\n// }) => {\n//   const newBook = await createBookEntry({\n//     googleId: params.googleId,\n//     categories: params.categories,\n//   });\n\n//   return { newBook };\n// };\n\nexport const BookActionsForm = ({ googleId }: Pick<LocalBookProps, 'googleId'>) => {\n  const [allCategories, setAllCategoryOptions] = useState<CategoryProps[]>([]);\n\n  useEffect(() => {\n    const getCategories = async () => {\n      const categoriesResponse = await getAllCategories();\n      setAllCategoryOptions(categoriesResponse);\n    };\n\n    getCategories();\n  }, []);\n\n  const initialValues: {\n    bookCategories: CategoryProps[];\n  } = {\n    bookCategories: book?.categories || [],\n  };\n  const formik = useFormik({\n    initialValues,\n    onSubmit: (values) => handleAddToDB(values),\n  });\n\n  const handleCategorySelect = (newValues: NewCategoryProps[]) => {\n    formik.setFieldValue(\"categories\", newValues);\n  };\n\n  //   const createBulkCategories = async ({ name }: { name: string }) => {\n  //     const response = await createBulkCategoryEntries({\n  //       categories: name,\n  //     });\n  //     setAllCategoryOptions((prev) => [...prev, response.data]);\n  //   };\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <MultiSelect\n        options={allCategories}\n        setOptions={setAllCategoryOptions}\n        values={formik.values.bookCategories}\n        name=\"bookCategories\"\n        onChange={handleCategorySelect}\n      />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAqB,QAAQ;AAE/C,SAASC,WAAW,QAAQ,8CAA8C;AAE1E,SAASC,gBAAgB,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA,OAAO,MAAMC,eAAe,GAAGC,IAAA,IAAoD;EAAAC,EAAA;EAAA,IAAAC,KAAA;EAAA,IAAnD;IAAEC;EAA2C,CAAC,GAAAH,IAAA;EAC5E,MAAM,CAACI,aAAa,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAkB,EAAE,CAAC;EAE5EC,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,kBAAkB,GAAG,MAAMX,gBAAgB,CAAC,CAAC;MACnDS,qBAAqB,CAACE,kBAAkB,CAAC;IAC3C,CAAC;IAEDD,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,aAEL,GAAG;IACFC,cAAc,EAAE,EAAAP,KAAA,GAAAQ,IAAI,cAAAR,KAAA,uBAAJA,KAAA,CAAMS,UAAU,KAAI;EACtC,CAAC;EACD,MAAMC,MAAM,GAAGlB,SAAS,CAAC;IACvBc,aAAa;IACbK,QAAQ,EAAGC,MAAM,IAAKC,aAAa,CAACD,MAAM;EAC5C,CAAC,CAAC;EAEF,MAAME,oBAAoB,GAAIC,SAA6B,IAAK;IAC9DL,MAAM,CAACM,aAAa,CAAC,YAAY,EAAED,SAAS,CAAC;EAC/C,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEnB,OAAA;IAAMe,QAAQ,EAAED,MAAM,CAACO,YAAa;IAAAC,QAAA,gBAClCtB,OAAA,CAACH,WAAW;MACV0B,OAAO,EAAEjB,aAAc;MACvBkB,UAAU,EAAEjB,qBAAsB;MAClCS,MAAM,EAAEF,MAAM,CAACE,MAAM,CAACL,cAAe;MACrCc,IAAI,EAAC,gBAAgB;MACrBC,QAAQ,EAAER;IAAqB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACF9B,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAC3B,EAAA,CA7CWF,eAAe;EAAA,QAiBXL,SAAS;AAAA;AAAAoC,EAAA,GAjBb/B,eAAe;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}